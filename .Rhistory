mutate(x18_35 = replace_na(x18_35, 0)) %>%
mutate(x36_59 = replace_na(x36_59, 0)) %>%
mutate(x60 = replace_na(x60, 0)) %>%
#    filter(x18_35 > 1 | x36_59 > 1 | x60 > 1) %>%
pivot_longer(cols = 2:4, names_to = "Age.Group", values_to = "n") %>%
mutate(tones = replace_na(tones, "N/A"))
tone_types = unique(plotdf$tones)
results = matrix(ncol = 3, nrow = length(tone_types))
for (thistone in 1:length(tone_types)) {
thisdf = plotdf %>% filter(tones == tone_types[thistone])
thisdf$Age.Group = as.factor(thisdf$Age.Group)
thisdf$Age.Group = relevel(thisdf$Age.Group, ref = "x36_59")
if (thisdf[2,3] == 0){
poisson_model_city = "No test"
} else {
poisson_model_city = glm(n ~ Age.Group, data = thisdf, family = poisson(link = "log"))
}
results[thistone, 1] = tone_types[thistone]
results[thistone, 2] = ifelse(typeof(poisson_model_city) == "list",
ifelse(summary(poisson_model_city)[["coefficients"]][2,4] < .05, print("*"), "NS"),
"NT")
results[thistone, 3] = ifelse(typeof(poisson_model_city) == "list",
ifelse(summary(poisson_model_city)[["coefficients"]][3,4] < .05, print("*"), "NS"),
"NT")
}
res_df = results %>%
as.data.frame() %>%
rename(tones = V1,
p_value_18_35 = V2,
p_value_60 = V3)
return(res_df)
}
Gender_p_table_no = function(city, sent)
{
df_p7 = long_all %>%
filter(DEPT == city) %>%
filter(words == "No") %>%
filter(sentence == "NFD3") %>%
group_by(tones) %>%
summarize(n = n()) %>%
filter(n > 1)
plotdf = long_all %>%
mutate(tones = str_remove(tones, " L-")) %>%
#  mutate(tones = str_trim(str_replace(tones, "L%", ""))) %>%
filter(DEPT == city) %>%
filter(words == "No") %>%
filter(sentence == "NFD3") %>%
group_by(Gender, tones) %>%
summarize(n = n()) %>%
filter(tones %in% df_p7$tones) %>%
pivot_wider(names_from = Gender, values_from = n) %>%
mutate(Female = replace_na(Female, 0)) %>%
mutate(Male = replace_na(Male, 0)) %>%
# filter(Male > 3 | Female > 3) %>%
pivot_longer(cols = 2:3, names_to = "Gender", values_to = "n") %>%
mutate(tones = replace_na(tones, "N/A"))
tone_types = unique(plotdf$tones)
results = matrix(ncol = 2, nrow = length(tone_types))
# Run BFD models and store p_values
for (thistone in 1:length(tone_types)) {
thisdf = plotdf %>% filter(tones == tone_types[thistone])
poisson_model_city <- glm(n ~ Gender, data =
thisdf,
family = poisson(link = "log"))
results[thistone, 1] = tone_types[thistone]
results[thistone, 2] = summary(poisson_model_city)[["coefficients"]][2,4]
}
res_df = results %>%
as.data.frame() %>%
rename(tones = V1,
p_value = V2) %>%
mutate(p_value = as.numeric(p_value)) %>%
mutate(result = case_when(
p_value > .05 ~ "NS",
p_value < .05 & p_value > .005 ~ "*",
p_value < .005 & p_value > .0005 ~ "**",
p_value < .0005 ~ "***"
))
return(res_df)
}
Gender_p_table_no("Montevideo", "NFD3")
city = "Montevideo"
sent = "NFD3"
df_p7 = long_all %>%
filter(DEPT == city) %>%
filter(words == "No") %>%
filter(sentence == "NFD3") %>%
group_by(tones) %>%
summarize(n = n()) %>%
filter(n > 1)
df_p7
long_all %>%
#mutate(tones = str_remove(tones, " L-")) %>%
#  mutate(tones = str_trim(str_replace(tones, "L%", ""))) %>%
group_by(Gender, tones) %>%
summarize(n = n()) %>%
filter(tones %in% df_p7$tones)
long_all %>%
#mutate(tones = str_remove(tones, " L-")) %>%
#  mutate(tones = str_trim(str_replace(tones, "L%", ""))) %>%
group_by(Gender, tones) %>%
summarize(n = n()) %>%
filter(tones %in% df_p7$tones) %>%
pivot_wider(names_from = Gender, values_from = n) %>%
mutate(Female = replace_na(Female,
long_all %>%
#mutate(tones = str_remove(tones, " L-")) %>%
#  mutate(tones = str_trim(str_replace(tones, "L%", ""))) %>%
group_by(Gender, tones) %>%
summarize(n = n()) %>%
filter(tones %in% df_p7$tones) %>%
pivot_wider(names_from = Gender, values_from = n) %>%
mutate(Female = replace_na(Female, 0)) %>%
mutate(Male = replace_na(Male, 0)) %>%
# filter(Male > 3 | Female > 3) %>%
pivot_longer(cols = 2:3, names_to = "Gender", values_to = "n") %>%
mutate(tones = replace_na(tones, "N/A"))
ong_all %>%
df_p7 = long_all %>%
filter(DEPT == city) %>%
filter(words == "No") %>%
filter(sentence == "NFD3") %>%
group_by(tones) %>%
summarize(n = n()) %>%
filter(n > 1)
long_all %>%
#mutate(tones = str_remove(tones, " L-")) %>%
#  mutate(tones = str_trim(str_replace(tones, "L%", ""))) %>%
group_by(Gender, tones) %>%
summarize(n = n()) %>%
filter(tones %in% df_p7$tones) %>%
pivot_wider(names_from = Gender, values_from = n) %>%
mutate(Female = replace_na(Female, 0)) %>%
mutate(Male = replace_na(Male, 0)) %>%
# filter(Male > 3 | Female > 3) %>%
pivot_longer(cols = 2:3, names_to = "Gender", values_to = "n") %>%
mutate(tones = replace_na(tones, "N/A"))
plotdf = long_all %>%
#mutate(tones = str_remove(tones, " L-")) %>%
#  mutate(tones = str_trim(str_replace(tones, "L%", ""))) %>%
group_by(Gender, tones) %>%
summarize(n = n()) %>%
filter(tones %in% df_p7$tones) %>%
pivot_wider(names_from = Gender, values_from = n) %>%
mutate(Female = replace_na(Female, 0)) %>%
mutate(Male = replace_na(Male, 0)) %>%
# filter(Male > 3 | Female > 3) %>%
pivot_longer(cols = 2:3, names_to = "Gender", values_to = "n") %>%
mutate(tones = replace_na(tones, "N/A"))
plotdf
tone_types = unique(plotdf$tones)
results = matrix(ncol = 2, nrow = length(tone_types))
tone_types
plotdf
thistone = 1
thisdf = plotdf %>% filter(tones == tone_types[thistone])
poisson_model_city <- glm(n ~ Gender, data =
thisdf,
family = poisson(link = "log"))
poisson_model_city
Gender_p_table_no = function(city, sent)
{
df_p7 = long_all %>%
filter(DEPT == city) %>%
filter(words == "No") %>%
filter(sentence == "NFD3") %>%
group_by(tones) %>%
summarize(n = n()) %>%
filter(n > 1)
plotdf = long_all %>%
#mutate(tones = str_remove(tones, " L-")) %>%
#  mutate(tones = str_trim(str_replace(tones, "L%", ""))) %>%
group_by(Gender, tones) %>%
summarize(n = n()) %>%
filter(tones %in% df_p7$tones) %>%
pivot_wider(names_from = Gender, values_from = n) %>%
mutate(Female = replace_na(Female, 0)) %>%
mutate(Male = replace_na(Male, 0)) %>%
# filter(Male > 3 | Female > 3) %>%
pivot_longer(cols = 2:3, names_to = "Gender", values_to = "n") %>%
mutate(tones = replace_na(tones, "N/A"))
tone_types = unique(plotdf$tones)
results = matrix(ncol = 2, nrow = length(tone_types))
# Run BFD models and store p_values
for (thistone in 1:length(tone_types)) {
thisdf = plotdf %>% filter(tones == tone_types[thistone])
poisson_model_city <- glm(n ~ Gender, data =
thisdf,
family = poisson(link = "log"))
results[thistone, 1] = tone_types[thistone]
results[thistone, 2] = summary(poisson_model_city)[["coefficients"]][2,4]
}
res_df = results %>%
as.data.frame() %>%
rename(tones = V1,
p_value = V2) %>%
mutate(p_value = as.numeric(p_value)) %>%
mutate(result = case_when(
p_value > .05 ~ "NS",
p_value < .05 & p_value > .005 ~ "*",
p_value < .005 & p_value > .0005 ~ "**",
p_value < .0005 ~ "***"
))
return(res_df)
}
Gender_p_table_no(city, sent)
Gender_p_table_no("Montevideo", "NFD3")
Gender_p_table_no = function(city, sent)
{
df_p7 = long_all %>%
filter(DEPT == city) %>%
filter(words == "No") %>%
filter(sentence == "NFD3") %>%
group_by(tones) %>%
summarize(n = n()) %>%
filter(n > 1)
plotdf = long_all %>%
#mutate(tones = str_remove(tones, " L-")) %>%
#  mutate(tones = str_trim(str_replace(tones, "L%", ""))) %>%
group_by(Gender, tones) %>%
summarize(n = n()) %>%
filter(tones %in% df_p7$tones) %>%
pivot_wider(names_from = Gender, values_from = n) %>%
mutate(Female = replace_na(Female, 0)) %>%
mutate(Male = replace_na(Male, 0)) %>%
# filter(Male > 3 | Female > 3) %>%
pivot_longer(cols = 2:3, names_to = "Gender", values_to = "n") %>%
mutate(tones = replace_na(tones, "N/A"))
tone_types = unique(plotdf$tones)
results = matrix(ncol = 2, nrow = length(tone_types))
# Run BFD models and store p_values
for (thistone in 1:length(tone_types)) {
thisdf = plotdf %>% filter(tones == tone_types[thistone])
poisson_model_city <- glm(n ~ Gender, data =
thisdf,
family = poisson(link = "log"))
results[thistone, 1] = tone_types[thistone]
results[thistone, 2] = summary(poisson_model_city)[["coefficients"]][2,4]
}
res_df = results %>%
as.data.frame() %>%
rename(tones = V1,
p_value = V2) %>%
mutate(p_value = as.numeric(p_value)) %>%
mutate(result = case_when(
p_value > .05 ~ "NS",
p_value < .05 & p_value > .005 ~ "*",
p_value < .005 & p_value > .0005 ~ "**",
p_value < .0005 ~ "***"
))
return(res_df)
}
Gender_p_table_no("Montevideo", "NFD3") %>%
knitr::kable(format = "pandoc", align = c("l", "r", "r", "r", "r", "r"),
caption = "A summary of Gender poisson regressions for Montevideo NFD3 no")
sig_plot_for_combined("Durazno", "Gender") + goodale_theme() + theme_bw()
sig_plot_for_combined("Durazno", "Gender") + goodale_theme()
source(here::here("00_helpers.R"))
source(here::here("01b_load_data.R"))
mv_long$tones = gsub("deaccented", "DA", mv_long$tones)
dz_long$tones = gsub("deaccented", "DA", dz_long$tones)
long_all$tones = gsub("deaccented", "DA", long_all$tones)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
data = long_all %>%
filter(focused == 1 & sentence_type == "NFD")
# get utterance totals
totals = data %>%
group_by(DEPT) %>%
summarize(n = n())
plotdf = data %>%
group_by(tones, DEPT) %>%
summarise(n = n()) %>%
pivot_wider(names_from = DEPT, values_from = n) %>%
mutate(Montevideo = round(replace_na(Montevideo, 0)/totals$n[2], digits = 2)*100) %>%
mutate(Durazno = round(replace_na(Durazno, 0)/totals$n[1], digits = 2)*100) %>%
filter(Montevideo > 5 | Durazno > 5)  %>%
pivot_longer(cols = 2:3, names_to = "City", values_to = "Percentage") %>%
mutate(tones = replace_na(tones, "N/A"))
tone_types = unique(plotdf$tones)
results = matrix(ncol = 3, nrow = length(tone_types))
model_df = data %>%
group_by(tones, DEPT) %>%
summarize(n = n()) %>%
pivot_wider(names_from = DEPT, values_from = n) %>%
filter(Montevideo > 3 & Durazno > 3) %>%
pivot_longer(cols = 2:3, names_to = "City", values_to = "count") %>%
mutate(tones = replace_na(tones, "N/A"))
# Run BFD models and store p_values
for (thistone in 1:length(tone_types)) {
thisdf = model_df %>% filter(tones == tone_types[thistone]) %>%
mutate(adj = c(1.5, 1)) %>%
mutate(count_adj = count*adj)
poisson_model_city <- glm(count_adj ~ City, data =
thisdf,
family = poisson(link = "log"))
results[thistone, 1] = tone_types[thistone]
results[thistone, 2] = ":)"
results[thistone, 3] = summary(poisson_model_city)[["coefficients"]][2,4]
}
res_df = results %>%
as.data.frame() %>%
rename(tones = V1,
statement_type = V2,
p_value = V3) %>%
mutate(p_value = as.numeric(p_value)) %>%
mutate(result = case_when(
p_value > .05 ~ "NS",
p_value < .05 & p_value > .005 ~ "*",
p_value < .005 & p_value > .0005 ~ "**",
p_value < .0005 ~ "***"
))
# get y positions
ypost = plotdf %>%
group_by(tones) %>%
summarize(yp = max(Percentage)) %>%
mutate(tones = replace_na(tones, "N/A"))
plotdf$tones = factor(plotdf$tones, levels = c(res_df$tones))
pdf = left_join(res_df, ypost, by = "tones")
plotdf %>%
mutate(tones = replace_na(tones, "N/A")) %>%
ggplot(aes(x = tones, y = Percentage, fill = City, position = "dodge")) +
geom_col(color = "black", position = "dodge2") +
geom_signif(y_position = c(pdf$yp+1), xmin = c(create_xminp(nrow(pdf))),
xmax = c(create_xmaxp(nrow(pdf))), annotation = c(pdf$result),
tip_length = 0) + goodale_theme() + scale_fill_grey(start = 0.2, end = 0.8)
plot_8_function("Durazno", "NFD6") + goodale_theme() + scale_fill_grey(start = 0.2, end = 0.8) + # Apply greyscale fill
plot_8_function("Durazno", "NFD6") + goodale_theme() + scale_fill_grey(start = 0.2, end = 0.8) + # Apply greyscale fill
plot_8_function("Durazno", "NFD6") + goodale_theme()
plot_8_function("Durazno", "NFD6") + goodale_theme() + scale_fill_grey(start = 0.2, end = 0.8) # Apply greyscale fill
plot_8_function("Durazno", "NFD6") + goodale_theme()
plot_8_function = function(city, sent)
{
df_p7 = long_all %>%
filter(DEPT == city & focused == 1 & sentence == sent) %>%
group_by(tones) %>%
summarize(n = n()) %>%
filter(n > 1)
a = df_p7 %>%
ggplot(aes(x = tones, y = n, position = "dodge")) +
geom_col(color = "black", position = "dodge2") + goodale_theme() +
scale_y_continuous(breaks=seq(1,max(df_p7$n),1)) + scale_fill_grey(start = 0.2, end = 0.8)  # Apply greyscale fill
b = long_all %>%
filter(DEPT == city & focused == 1 & sentence == sent) %>%
group_by(tones, Gender) %>%
summarize(n = n()) %>%
filter(tones %in% df_p7$tones) %>%
ggplot(aes(x = tones, y = n, fill = Gender)) +
geom_col(color = "black") + goodale_theme() +
scale_y_continuous(breaks=seq(1,max(df_p7$n),1)) + scale_fill_grey(start = 0.2, end = 0.8)
c = long_all %>%
filter(DEPT == city & focused == 1 & sentence == sent) %>%
group_by(tones, Age.Group) %>%
summarize(n = n()) %>%
filter(tones %in% df_p7$tones) %>%
ggplot(aes(x = tones, y = n, fill = Age.Group)) +
geom_col(color = "black") + goodale_theme() +
scale_y_continuous(breaks=seq(1,max(df_p7$n),1)) + scale_fill_grey(start = 0.2, end = 0.8)
library(patchwork)
combined <- a + b + c & theme(legend.position = "bottom")
plot = combined + plot_layout(guides = "collect")
return(plot)
}
plot_8_function("Durazno", "NFD6") + goodale_theme()
read.csv(here("data", "extra_data.csv"))
read.csv(here("data", "extra_plto.csv"))
read.csv(here("data", "extra_plot.csv"))
ed = read.csv(here("data", "extra_plot.csv"))
View(ed)
ed = read.csv(here("data", "extra_plot.csv")) %>%
pivot_longer(cols = c(2:4))
ead.csv(here("data", "extra_plot.csv")) %>%
pivot_longer(cols = c(2:4))
read.csv(here("data", "extra_plot.csv")) %>%
pivot_longer(cols = c(2:4))
read.csv(here("data", "extra_plot.csv")) %>%
pivot_longer(cols = c(2:4))
read.csv(here("data", "extra_plot.csv")) %>%
pivot_longer(cols = c(2:4))
ed = read.csv(here("data", "extra_plot.csv")) %>%
pivot_longer(cols = c(2:4))
unique(ed$value)
interest = c("L* L%", "L+H* L%")
ed = read.csv(here("data", "extra_plot.csv")) %>%
pivot_longer(cols = c(2:4)) %>%
mutate(value = ifelse(value %in% interest, value, "other"))
View(ed)
ed %>%
group_by(value) %>%
summarise(n = n())
ed
interest = c("L* L%", "L+H* L%")
ed = read.csv(here("data", "extra_plot.csv")) %>%
pivot_longer(cols = c(2:4)) %>%
mutate(value = ifelse(value %in% interest, value, "other")) %>%
mutate(name = substr(name, 1, 4))
ed %>%
group_by(value, name) %>%
summarise(n = n())
ed %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ggplot(aes(x = tones, y = n, fill = value)) +
geom_col(color = "black") + goodale_theme() +
scale_y_continuous(breaks=seq(1,max(df_p7$n),1)) + scale_fill_grey(start = 0.2, end = 0.8)  # Apply greyscale fill
ed %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ggplot(aes(x = value, y = n, fill = value)) +
geom_col(color = "black") + goodale_theme() +
scale_y_continuous(breaks=seq(1,max(df_p7$n),1)) + scale_fill_grey(start = 0.2, end = 0.8)  # Apply greyscale fill
ed %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ggplot(aes(x = value, y = n, fill = value)) +
geom_col(color = "black") + goodale_theme() + scale_fill_grey(start = 0.2, end = 0.8)  # Apply greyscale fill
ed %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ggplot(aes(x = value, y = n, fill = value)) +
geom_col(color = "black") + goodale_theme() +
scale_fill_grey(start = 0.2, end = 0.8) +
facet_wrap(~value)
ed %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ggplot(aes(x = value, y = n, fill = value)) +
geom_col(color = "black") + goodale_theme() +
scale_fill_grey(start = 0.2, end = 0.8) +
facet_wrap(~name)
ed
View(res_df)
# Load necessary libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# Read and process the data
interest = c("L* L%", "L+H* L%")
ed = read.csv(here("data", "extra_plot.csv")) %>%
pivot_longer(cols = c(2:4)) %>%
mutate(value = ifelse(value %in% interest, value, "other")) %>%
mutate(name = substr(name, 1, 4))
# Summarize and plot the data
ed %>%
group_by(value, name) %>%
summarise(n = n(), .groups = 'drop') %>%
ggplot(aes(x = value, y = n, fill = value)) +
geom_col(color = "black") +
geom_text(aes(label = n), vjust = -0.5, color = "black", size = 3.5) + # Add counts above bars
goodale_theme() +
scale_fill_grey(start = 0.2, end = 0.8) +
facet_wrap(~name) +
labs(title = "Count of Values by Category and Name",
x = "Value",
y = "Count")
ed %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ggplot(aes(x = value, y = n, fill = value)) +
geom_text(aes(label = n), vjust = -0.5, color = "black", size = 3.5) + # Add counts above bars
geom_col(color = "black") + goodale_theme() +
scale_fill_grey(start = 0.2, end = 0.8) +
facet_wrap(~name)
ed %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ggplot(aes(x = value, y = n, fill = value)) +
geom_text(aes(label = n), vjust = -0.5, color = "black", size = 3.5) + # Add counts above bars
geom_col(color = "black") + goodale_theme() +
scale_fill_grey(start = 0.2, end = 0.8) +
facet_wrap(~name) + xlab("")
ed %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ggplot(aes(x = value, y = n, fill = value)) +
geom_text(aes(label = n), vjust = -0.5, color = "black", size = 3.5) + # Add counts above bars
geom_col(color = "black") + goodale_theme() +
scale_fill_grey(start = 0.2, end = 0.8) +
facet_wrap(~name) + xlab("") + theme(legend.title = "")
ed %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ggplot(aes(x = value, y = n, fill = value)) +
geom_text(aes(label = n), vjust = -0.5, color = "black", size = 3.5) + # Add counts above bars
geom_col(color = "black") + goodale_theme() +
scale_fill_grey(start = 0.2, end = 0.8) +
facet_wrap(~name) + xlab("") + theme(legend.title = element_blank())
interest = c("L* L%", "L+H* L%")
ed = read.csv(here("data", "extra_plot.csv")) %>%
pivot_longer(cols = c(2:4)) %>%
mutate(value = ifelse(value %in% interest, value, "other")) %>%
mutate(name = substr(name, 1, 4))
ed %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ggplot(aes(x = value, y = n, fill = value)) +
geom_text(aes(label = n), vjust = -0.5, color = "black", size = 3.5) + # Add counts above bars
geom_col(color = "black") + goodale_theme() +
scale_fill_grey(start = 0.2, end = 0.8) +
facet_wrap(~name) + xlab("") + theme(legend.title = element_blank())
mv_long %>%
filter(focused == 1 & sentence_type == "NFD") %>%
group_by(tones) %>%
summarize(n = n()) %>%
geom_text(aes(label = n), vjust = -0.5, color = "black", size = 3.5) + # Add counts above bars
ggplot(aes(x = tones, y = n, position = "dodge")) +
geom_col(color = "black", position = "dodge2") + goodale_theme() + scale_fill_grey(start = 0.2, end = 0.8)
dz_long %>%
filter(focused == 1 & sentence_type == "NFD") %>%
group_by(tones) %>%
summarize(n = n()) %>%
ggplot(aes(x = tones, y = n, position = "dodge")) +
geom_col(color = "black", position = "dodge2") + goodale_theme() + scale_fill_grey(start = 0.2, end = 0.8) + geom_text(aes(label = n), vjust = -0.5, color = "black", size = 3.5) + # Add counts above bars
